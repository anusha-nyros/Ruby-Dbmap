<script>
 $(document).ready(function (){
	$('.syncing').click(function(e){ 
      	 $('#matter').html("Sync In Progress ...")
	$('#pbar').css("display","block");
 });
 $('.preparing').click(function(e){ 


	 	var confirmation =confirm("Do you want to create pdf report ? ");
		if(confirmation == true)
                {
      	             $('#matter').html("Preparing Document ...")
	             $('#pbar').css("display","block");
                	return true;
                }
		else{
		return false;
		   }
 });
        
 });
</script>
<script>
var w3c=(document.getElementById)?true:false;
var ie=(document.all)?true:false;
var N=-1;

function createBar(w,h,bgc,brdW,brdC,blkC,speed,blocks,count,action){
if(ie||w3c){
var t='<div id="_xpbar'+(++N)+'" style="visibility:visible; position:relative; overflow:hidden; width:'+w+'px; height:'+h+'px; background-color:'+bgc+'; border-color:'+brdC+'; border-width:'+brdW+'px; border-style:solid; font-size:1px;">';
t+='<span id="blocks'+N+'" style="left:-'+(h*2+1)+'px; position:absolute; font-size:1px">';
for(i=0;i<blocks;i++){
t+='<span style="background-color:'+blkC+'; left:-'+((h*i)+i)+'px; font-size:1px; position:absolute; width:'+h+'px; height:'+h+'px; '
t+=(ie)?'filter:alpha(opacity='+(100-i*(100/blocks))+')':'-Moz-opacity:'+((100-i*(100/blocks))/100);
t+='"></span>';
}
t+='</span></div>';
document.write(t);
var bA=(ie)?document.all['blocks'+N]:document.getElementById('blocks'+N);
bA.bar=(ie)?document.all['_xpbar'+N]:document.getElementById('_xpbar'+N);
bA.blocks=blocks;
bA.N=N;
bA.w=w;
bA.h=h;
bA.speed=speed;
bA.ctr=0;
bA.count=count;
bA.action=action;
bA.togglePause=togglePause;
bA.showBar=function(){
this.bar.style.visibility="visible";
}
bA.hideBar=function(){
this.bar.style.visibility="hidden";
}
bA.tid=setInterval('startBar('+N+')',speed);
return bA;
}}

function startBar(bn){
var t=(ie)?document.all['blocks'+bn]:document.getElementById('blocks'+bn);
if(parseInt(t.style.left)+t.h+1-(t.blocks*t.h+t.blocks)>t.w){
t.style.left=-(t.h*2+1)+'px';
t.ctr++;
if(t.ctr>=t.count){
eval(t.action);
t.ctr=0;
}}else t.style.left=(parseInt(t.style.left)+t.h+1)+'px';
}

function togglePause(){
if(this.tid==0){
this.tid=setInterval('startBar('+this.N+')',this.speed);
}else{
clearInterval(this.tid);
this.tid=0;
}}

function togglePause(){
if(this.tid==0){
this.tid=setInterval('startBar('+this.N+')',this.speed);
}else{
clearInterval(this.tid);
this.tid=0;
}}
</script>

<style>
 table { table-layout: fixed; }
 table th, table td { }
</style>
<div>
<h1 style="float:left"> Databases </h1>
<div id="pbar" style="display:none; float:right;  ">
<p id = "matter">  </p>
<script type="text/javascript">
var bar2= createBar(320,15,'white',1,'black','#149BDF',85,7,3);
</script>
</div>
</div>
<table class="table table-striped">  
  <tr>
    <th style="width:20%"><%= sort_link(@q, :db_name, "Database Name") %></th>
    <th  style="width:10%"><%= sort_link(@q, :db_environment, "Environment") %></th>
    <th style="width:10%"><%= sort_link(@q, :db_technology, "Technology") %></th>
    <th  style="width:20%"><%= sort_link(@q, :db_usage, "Usage") %></th>
    <th  style="width:8%"><%= sort_link(@q, :oftables, "#Tables") %></th>
    <th  style="width:8%"><%= sort_link(@q, :offields, "#Fields") %></th>
    <th  style="width:10%"><%= sort_link(@q, :last_sync, "Last Sync") %></th>
    <th style="width:25%"></th>
  </tr>

<% @databases.each do |database| %>
  <tr>
	  <td style="width:15px"> <%= link_to database.db_name,search_tables_path(:q =>{"database_name_cont" =>"#{database.db_name}"}) %> </td>
    <td> <%= database.db_environment %> </td>
    <td> <%= database.db_technology %> </td>
    <td> <%= database.db_usage %> </td>
    <td> <%= number_with_delimiter(database.oftables) %> </td>
    <td> <%= number_with_delimiter(database.offields) %> </td>
    <td> <%= database.last_sync.strftime("%b-%d-%Y") if !database.last_sync.blank? %> </td>

    <td style="width:190px;">
     <%= link_to 'Sync', database_schema1_path(:id => database.id) ,class: 'btn btn-mini btn-primary syncing' %>
      <%= link_to 'DataView', dataview_databases_path(:id => database.id) ,class: 'btn btn-mini btn-primary' if database.db_technology == "MySQL" %>
       <%= simple_form_for :database,:url => url_for(:action=>'pdf_report',:controller=>'databases'), :html => {class: 'form-horizontal preparing'}  do |f| %>
        <input type="hidden" name="data_id" value=" <%= database.id %>"/>
	<%= submit_tag("PDF", :class=> "btn btn-mini btn-primary",:style=>"margin-top:-40px;margin-left:110px;width:40px;") %>

	<% end %>


    </td>
  </tr>
<% end %>
</table>
<br />

